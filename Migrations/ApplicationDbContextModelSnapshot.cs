// <auto-generated />
using System;
using EmployeeManagement.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeManagement.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Employee", b =>
                {
                    b.Property<string>("EmployeeNumber")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("GenderCode")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<string>("ReportedToEmployeeNumber")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VacationDaysLeft")
                        .HasColumnType("int");

                    b.HasKey("EmployeeNumber");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("PositionId");

                    b.HasIndex("ReportedToEmployeeNumber");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Position", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PositionId"));

                    b.Property<string>("PositionName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("PositionId");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("RequestState", b =>
                {
                    b.Property<int>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StateId"));

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("StateId");

                    b.ToTable("RequestStates");

                    b.HasData(
                        new
                        {
                            StateId = 1,
                            StateName = "Submitted"
                        },
                        new
                        {
                            StateId = 2,
                            StateName = "Approved"
                        },
                        new
                        {
                            StateId = 3,
                            StateName = "Declined"
                        });
                });

            modelBuilder.Entity("VacationRequest", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestId"));

                    b.Property<string>("ApprovedByEmployeeNumber")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("DeclinedByEmployeeNumber")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmployeeNumber")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<int>("RequestStateId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RequestSubmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("TotalVacationDays")
                        .HasColumnType("int");

                    b.Property<string>("VacationTypeCode")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("RequestId");

                    b.HasIndex("ApprovedByEmployeeNumber");

                    b.HasIndex("DeclinedByEmployeeNumber");

                    b.HasIndex("EmployeeNumber");

                    b.HasIndex("RequestStateId");

                    b.HasIndex("VacationTypeCode");

                    b.ToTable("VacationRequests");
                });

            modelBuilder.Entity("VacationType", b =>
                {
                    b.Property<string>("VacationTypeCode")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("VacationTypeName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("VacationTypeCode");

                    b.ToTable("VacationTypes");

                    b.HasData(
                        new
                        {
                            VacationTypeCode = "S",
                            VacationTypeName = "Sick"
                        },
                        new
                        {
                            VacationTypeCode = "U",
                            VacationTypeName = "Unpaid"
                        },
                        new
                        {
                            VacationTypeCode = "A",
                            VacationTypeName = "Annual"
                        },
                        new
                        {
                            VacationTypeCode = "O",
                            VacationTypeName = "Day Off"
                        },
                        new
                        {
                            VacationTypeCode = "B",
                            VacationTypeName = "Business Trip"
                        });
                });

            modelBuilder.Entity("Employee", b =>
                {
                    b.HasOne("Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Position", "Position")
                        .WithMany("Employees")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Employee", "ReportedToEmployee")
                        .WithMany("Subordinates")
                        .HasForeignKey("ReportedToEmployeeNumber")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Department");

                    b.Navigation("Position");

                    b.Navigation("ReportedToEmployee");
                });

            modelBuilder.Entity("VacationRequest", b =>
                {
                    b.HasOne("Employee", "ApprovedByEmployee")
                        .WithMany()
                        .HasForeignKey("ApprovedByEmployeeNumber")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Employee", "DeclinedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeclinedByEmployeeNumber")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Employee", "Employee")
                        .WithMany("VacationRequests")
                        .HasForeignKey("EmployeeNumber")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RequestState", "RequestState")
                        .WithMany("VacationRequests")
                        .HasForeignKey("RequestStateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VacationType", "VacationType")
                        .WithMany("VacationRequests")
                        .HasForeignKey("VacationTypeCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ApprovedByEmployee");

                    b.Navigation("DeclinedByEmployee");

                    b.Navigation("Employee");

                    b.Navigation("RequestState");

                    b.Navigation("VacationType");
                });

            modelBuilder.Entity("Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Employee", b =>
                {
                    b.Navigation("Subordinates");

                    b.Navigation("VacationRequests");
                });

            modelBuilder.Entity("Position", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("RequestState", b =>
                {
                    b.Navigation("VacationRequests");
                });

            modelBuilder.Entity("VacationType", b =>
                {
                    b.Navigation("VacationRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
